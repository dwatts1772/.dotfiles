#!/bin/sh
# Redirect output to stderr.
exec 1>&2
# enable user input
exec < /dev/tty

# Find "makeitpretty" command in package.json
if test $(grep makeitpretty ./package.json | wc -l) != 0
then
  # Run NPM RUN MAKEITPRETTY
  if [ -x "$(command -v npm)" ]; then
    echo 'Makeitpretty!'
    npm run makeitpretty;
  fi
  # Check for any new changes from 'makeitpretty command'
  echo "\nChecking git status...";
  if test $(git diff | cat | wc -l) != 0
  then
    echo "################################################"
    echo "#                 WARNING                      #"
    echo "################################################"
    exec git status -s | cat
    echo ""
    echo ""
    read -p "Possible unadded changes from makeitpretty, commit anyways? (y/n): " yn
    echo $yn | grep ^[Yy]$
    if [ $? -eq 0 ]
    then
      exit 0;
    else
      exit 1;
    fi
  fi
fi

regexp='^\+.*(console\.(warn\(|log\(|error\()|\{\{log.*)'
# Check for any left over console.logs/wars/errors
if test $(git diff --cached | egrep $regexp | wc -l) != 0
then
  echo "################################################"
  echo "#                 WARNING                      #"
  echo "################################################"
  exec git diff --cached | egrep --color -C 5 -ne $regexp
  echo ""
  echo ""
  read -p "You are about to commit log statements. Be a bad developer and commit anyway? (y/n): " yn
  echo $yn | grep ^[Yy]$
  if [ $? -eq 0 ]
  then
    exit 0; #THE USER WANTS TO CONTINUE
  else
    exit 1; # THE USER DONT WANT TO CONTINUE SO ROLLBACK
  fi
fi
